//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VoteITClient.VoteServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/BusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiredFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateExpired {
            get {
                return this.DateExpiredField;
            }
            set {
                if ((this.DateExpiredField.Equals(value) != true)) {
                    this.DateExpiredField = value;
                    this.RaisePropertyChanged("DateExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiredFlag {
            get {
                return this.ExpiredFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiredFlagField, value) != true)) {
                    this.ExpiredFlagField = value;
                    this.RaisePropertyChanged("ExpiredFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/BusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnswerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserResultIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VotedFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnswerID {
            get {
                return this.AnswerIDField;
            }
            set {
                if ((this.AnswerIDField.Equals(value) != true)) {
                    this.AnswerIDField = value;
                    this.RaisePropertyChanged("AnswerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserResultID {
            get {
                return this.UserResultIDField;
            }
            set {
                if ((this.UserResultIDField.Equals(value) != true)) {
                    this.UserResultIDField = value;
                    this.RaisePropertyChanged("UserResultID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VotedFlag {
            get {
                return this.VotedFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.VotedFlagField, value) != true)) {
                    this.VotedFlagField = value;
                    this.RaisePropertyChanged("VotedFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/BusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiredFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiredFlag {
            get {
                return this.ExpiredFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiredFlagField, value) != true)) {
                    this.ExpiredFlagField = value;
                    this.RaisePropertyChanged("ExpiredFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((this.LoginIDField.Equals(value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VoteServiceReference.IVote")]
    public interface IVote {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetQuestion", ReplyAction="http://tempuri.org/IVote/GetQuestionResponse")]
        System.Data.DataSet GetQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetQuestion", ReplyAction="http://tempuri.org/IVote/GetQuestionResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetQuestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetQuestionByUser", ReplyAction="http://tempuri.org/IVote/GetQuestionByUserResponse")]
        System.Data.DataSet GetQuestionByUser(int createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetQuestionByUser", ReplyAction="http://tempuri.org/IVote/GetQuestionByUserResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetQuestionByUserAsync(int createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetQuestionDetails", ReplyAction="http://tempuri.org/IVote/GetQuestionDetailsResponse")]
        System.Data.DataSet GetQuestionDetails(int questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetQuestionDetails", ReplyAction="http://tempuri.org/IVote/GetQuestionDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetQuestionDetailsAsync(int questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/InsertQuestion", ReplyAction="http://tempuri.org/IVote/InsertQuestionResponse")]
        int InsertQuestion(VoteITClient.VoteServiceReference.Question objQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/InsertQuestion", ReplyAction="http://tempuri.org/IVote/InsertQuestionResponse")]
        System.Threading.Tasks.Task<int> InsertQuestionAsync(VoteITClient.VoteServiceReference.Question objQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetAnswers", ReplyAction="http://tempuri.org/IVote/GetAnswersResponse")]
        System.Data.DataSet GetAnswers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetAnswers", ReplyAction="http://tempuri.org/IVote/GetAnswersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnswersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetCategory", ReplyAction="http://tempuri.org/IVote/GetCategoryResponse")]
        System.Data.DataSet GetCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetCategory", ReplyAction="http://tempuri.org/IVote/GetCategoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/InsertResponse", ReplyAction="http://tempuri.org/IVote/InsertResponseResponse")]
        int InsertResponse(VoteITClient.VoteServiceReference.Result objQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/InsertResponse", ReplyAction="http://tempuri.org/IVote/InsertResponseResponse")]
        System.Threading.Tasks.Task<int> InsertResponseAsync(VoteITClient.VoteServiceReference.Result objQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetResult", ReplyAction="http://tempuri.org/IVote/GetResultResponse")]
        System.Data.DataSet GetResult(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/GetResult", ReplyAction="http://tempuri.org/IVote/GetResultResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetResultAsync(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/Voted", ReplyAction="http://tempuri.org/IVote/VotedResponse")]
        bool Voted(int questionId, int createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/Voted", ReplyAction="http://tempuri.org/IVote/VotedResponse")]
        System.Threading.Tasks.Task<bool> VotedAsync(int questionId, int createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/Login", ReplyAction="http://tempuri.org/IVote/LoginResponse")]
        int Login(VoteITClient.VoteServiceReference.Login objLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/Login", ReplyAction="http://tempuri.org/IVote/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(VoteITClient.VoteServiceReference.Login objLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/Register", ReplyAction="http://tempuri.org/IVote/RegisterResponse")]
        int Register(VoteITClient.VoteServiceReference.Login objLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVote/Register", ReplyAction="http://tempuri.org/IVote/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(VoteITClient.VoteServiceReference.Login objLogin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVoteChannel : VoteITClient.VoteServiceReference.IVote, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VoteClient : System.ServiceModel.ClientBase<VoteITClient.VoteServiceReference.IVote>, VoteITClient.VoteServiceReference.IVote {
        
        public VoteClient() {
        }
        
        public VoteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VoteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetQuestion() {
            return base.Channel.GetQuestion();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetQuestionAsync() {
            return base.Channel.GetQuestionAsync();
        }
        
        public System.Data.DataSet GetQuestionByUser(int createdBy) {
            return base.Channel.GetQuestionByUser(createdBy);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetQuestionByUserAsync(int createdBy) {
            return base.Channel.GetQuestionByUserAsync(createdBy);
        }
        
        public System.Data.DataSet GetQuestionDetails(int questionID) {
            return base.Channel.GetQuestionDetails(questionID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetQuestionDetailsAsync(int questionID) {
            return base.Channel.GetQuestionDetailsAsync(questionID);
        }
        
        public int InsertQuestion(VoteITClient.VoteServiceReference.Question objQuestion) {
            return base.Channel.InsertQuestion(objQuestion);
        }
        
        public System.Threading.Tasks.Task<int> InsertQuestionAsync(VoteITClient.VoteServiceReference.Question objQuestion) {
            return base.Channel.InsertQuestionAsync(objQuestion);
        }
        
        public System.Data.DataSet GetAnswers() {
            return base.Channel.GetAnswers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnswersAsync() {
            return base.Channel.GetAnswersAsync();
        }
        
        public System.Data.DataSet GetCategory() {
            return base.Channel.GetCategory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryAsync() {
            return base.Channel.GetCategoryAsync();
        }
        
        public int InsertResponse(VoteITClient.VoteServiceReference.Result objQuestion) {
            return base.Channel.InsertResponse(objQuestion);
        }
        
        public System.Threading.Tasks.Task<int> InsertResponseAsync(VoteITClient.VoteServiceReference.Result objQuestion) {
            return base.Channel.InsertResponseAsync(objQuestion);
        }
        
        public System.Data.DataSet GetResult(int questionId) {
            return base.Channel.GetResult(questionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetResultAsync(int questionId) {
            return base.Channel.GetResultAsync(questionId);
        }
        
        public bool Voted(int questionId, int createdBy) {
            return base.Channel.Voted(questionId, createdBy);
        }
        
        public System.Threading.Tasks.Task<bool> VotedAsync(int questionId, int createdBy) {
            return base.Channel.VotedAsync(questionId, createdBy);
        }
        
        public int Login(VoteITClient.VoteServiceReference.Login objLogin) {
            return base.Channel.Login(objLogin);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(VoteITClient.VoteServiceReference.Login objLogin) {
            return base.Channel.LoginAsync(objLogin);
        }
        
        public int Register(VoteITClient.VoteServiceReference.Login objLogin) {
            return base.Channel.Register(objLogin);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(VoteITClient.VoteServiceReference.Login objLogin) {
            return base.Channel.RegisterAsync(objLogin);
        }
    }
}
